{"ast":null,"code":"var _jsxFileName = \"/Users/burcu/weather-app-react/src/components/AsideRight.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LocalTime from \"./LocalTime\"; //import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AsideRight() {\n  _s();\n\n  const [currLocData, setCurrLocData] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\"\n  });\n  const [currLocWeatherCond, setCurrLocWeatherCond] = useState({\n    weather: [{\n      id: \"\",\n      description: \"\"\n    }],\n    main: {\n      temp: \"\",\n      temp_min: \"\",\n      temp_max: \"\"\n    }\n  });\n\n  const currLocationAPI = async () => {\n    const apiCall = await fetch(\"https://extreme-ip-lookup.com/json/\");\n    const result = await apiCall.json();\n    setCurrLocWeatherCond({\n      weather: result.weather,\n      main: result.main\n    }); // setCurrLocData({\n    //   city: currLocationRes.data.city,\n    //   state: currLocationRes.data.region,\n    //   country: currLocationRes.data.countryCode,\n    // });\n  };\n\n  useEffect(() => {\n    currLocationAPI();\n  }, []);\n\n  const convertKtoF = temp => {\n    return Math.floor((temp - 273.15) * 9 / 5 + 32);\n  };\n\n  const minMaxTemp = (min, max) => {\n    return /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Low: \", convertKtoF(min), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"High: \", convertKtoF(max), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n\n  const {\n    temp_min,\n    temp_max,\n    temp\n  } = currLocWeatherCond.main;\n  const {\n    city,\n    state,\n    country\n  } = currLocData;\n  const {\n    description,\n    id\n  } = currLocWeatherCond.weather[0];\n  const customCl = `wi wi-owm-${id} display-1`;\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    id: \"right-side\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aside-h3\",\n      children: \"Local Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: customCl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [convertKtoF(temp), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), minMaxTemp(temp_min, temp_max), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocalTime, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AsideRight, \"ldYegfKcD/UkGlTdnEo/X4TpZlE=\");\n\n_c = AsideRight;\nexport default AsideRight;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsideRight\");","map":{"version":3,"sources":["/Users/burcu/weather-app-react/src/components/AsideRight.js"],"names":["React","useState","useEffect","LocalTime","AsideRight","currLocData","setCurrLocData","city","state","country","currLocWeatherCond","setCurrLocWeatherCond","weather","id","description","main","temp","temp_min","temp_max","currLocationAPI","apiCall","fetch","result","json","convertKtoF","Math","floor","minMaxTemp","min","max","customCl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LocalTime from \"./LocalTime\";\n//import axios from \"axios\";\n\nfunction AsideRight() {\n  const [currLocData, setCurrLocData] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\",\n  });\n\n  const [currLocWeatherCond, setCurrLocWeatherCond] = useState({\n    weather: [{ id: \"\", description: \"\" }],\n    main: { temp: \"\", temp_min: \"\", temp_max: \"\" },\n  });\n\n  const currLocationAPI =  async ()=>{\n    const apiCall = await fetch(\"https://extreme-ip-lookup.com/json/\");\n    const result = await apiCall.json();\n    setCurrLocWeatherCond({\n      weather: result.weather,\n      main: result.main,\n    });\n    // setCurrLocData({\n    //   city: currLocationRes.data.city,\n    //   state: currLocationRes.data.region,\n    //   country: currLocationRes.data.countryCode,\n    // });\n  }\n\n\n  useEffect(() => {\n      currLocationAPI();\n      },[])\n\n\n  const convertKtoF = (temp) => {\n    return Math.floor(((temp - 273.15) * 9) / 5 + 32);\n  };\n\n  const minMaxTemp = (min, max) => {\n    return (\n      <h6>\n        <span>Low: {convertKtoF(min)}&deg;</span>\n        {\" - \"}\n        <span>High: {convertKtoF(max)}&deg;</span>\n      </h6>\n    );\n  };\n\n  const { temp_min, temp_max, temp } = currLocWeatherCond.main;\n  const { city, state, country } = currLocData;\n  const { description, id } = currLocWeatherCond.weather[0];\n  const customCl = `wi wi-owm-${id} display-1`;\n  return (\n    <aside id=\"right-side\">\n      <h3 className=\"aside-h3\">Local Weather</h3>\n      <div className=\"current-location\">\n        <span>{city}</span>\n        <br />\n        <span>{state}</span>\n        {\", \"}\n        <span>{country}</span>\n      </div>\n      <i className={customCl}></i>\n      <h1>{convertKtoF(temp)}&deg;</h1>\n      {minMaxTemp(temp_min, temp_max)}\n      <h4>{description}</h4>\n      <LocalTime />\n    </aside>\n  );\n}\n\nexport default AsideRight;"]},"metadata":{},"sourceType":"module"}