{"ast":null,"code":"var _jsxFileName = \"/Users/burcu/weather-app-react/src/components/AsideLeft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { debounce } from \"lodash\";\nimport ResultSection from \"./ResultSection\";\nimport FormSubmit from \"./FormSubmit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AsideLeft() {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    weather: [{\n      id: \"\",\n      description: \"\"\n    }],\n    main: {\n      temp: \"\",\n      temp_min: \"\",\n      temp_max: \"\"\n    },\n    name: \"\",\n    sys: {\n      country: \"\"\n    }\n  });\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [showResult, setShowResult] = useState(false);\n  const [tempType, setTempType] = useState(\"fahrenheit\");\n  const handleSearch = debounce(e => {\n    setSearchVal(e.target.value);\n  }, 500);\n  const options = {\n    method: 'POST',\n    url: 'https://accuweatherstefan-skliarovv1.p.rapidapi.com/searchCityWithCountryCode',\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'x-rapidapi-host': 'AccuWeatherstefan-skliarovV1.p.rapidapi.com',\n      'x-rapidapi-key': 'f887572407msh56410153107a328p1124eajsn9d7f3710bb25'\n    },\n    data: {\n      apiKey: '<REQUIRED>',\n      query: '<REQUIRED>',\n      countryCode: '<REQUIRED>'\n    }\n  };\n  axios.request(options).then(function (response) {\n    console.log(response.data);\n  }).catch(function (error) {\n    console.error(error);\n  }); // const handleFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   const weatherAPI = 'https://accuweatherstefan-skliarovv1.p.rapidapi.com/searchCity';\n  //   axios\n  //     .get(weatherAPI)\n  //     .then((weatherRes) => {\n  //       setShowResult(true);\n  //       setWeatherData({\n  //         weather: weatherRes.data.weather,\n  //         main: weatherRes.data.main,\n  //         name: weatherRes.data.name,\n  //         sys: weatherRes.data.sys,\n  //       });\n  //       setError(\"\");\n  //     })\n  //     .catch((err) => setError(err));\n  // };\n\n  const handleTempTypeChange = e => {\n    setTempType(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    id: \"left-side\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aside-h3\",\n      children: \"Find Current Weather Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aside-h3\",\n      children: \"Of Any City In The World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleSearch,\n      id: \"search\",\n      type: \"text\",\n      placeholder: \"Enter city...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"error\",\n      children: \"There is no such city in the world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FormSubmit, {\n      handleFormSubmit: handleFormSubmit,\n      tempType: tempType,\n      handleTempTypeChange: handleTempTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), showResult && /*#__PURE__*/_jsxDEV(ResultSection, {\n      weatherData: weatherData,\n      tempType: tempType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AsideLeft, \"qhIEQnHw0g+cqRYWnRPKn9ScZ4I=\");\n\n_c = AsideLeft;\nexport default AsideLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsideLeft\");","map":{"version":3,"sources":["/Users/burcu/weather-app-react/src/components/AsideLeft.js"],"names":["React","useState","axios","debounce","ResultSection","FormSubmit","AsideLeft","weatherData","setWeatherData","weather","id","description","main","temp","temp_min","temp_max","name","sys","country","searchVal","setSearchVal","error","setError","showResult","setShowResult","tempType","setTempType","handleSearch","e","target","value","options","method","url","headers","data","apiKey","query","countryCode","request","then","response","console","log","catch","handleTempTypeChange","handleFormSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { debounce } from \"lodash\";\nimport ResultSection from \"./ResultSection\";\nimport FormSubmit from \"./FormSubmit\";\n\nfunction AsideLeft() {\n  const [weatherData, setWeatherData] = useState({\n    weather: [{ id: \"\", description: \"\" }],\n    main: { temp: \"\", temp_min: \"\", temp_max: \"\" },\n    name: \"\",\n    sys: { country: \"\" },\n  });\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [showResult, setShowResult] = useState(false);\n  const [tempType, setTempType] = useState(\"fahrenheit\");\n\n  const handleSearch = debounce((e) => {\n    setSearchVal(e.target.value);\n   \n  }, 500);\n\n\n\n\n  const options = {\n    method: 'POST',\n    url: 'https://accuweatherstefan-skliarovv1.p.rapidapi.com/searchCityWithCountryCode',\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'x-rapidapi-host': 'AccuWeatherstefan-skliarovV1.p.rapidapi.com',\n      'x-rapidapi-key': 'f887572407msh56410153107a328p1124eajsn9d7f3710bb25'\n    },\n    data: {apiKey: '<REQUIRED>', query: '<REQUIRED>', countryCode: '<REQUIRED>'}\n  };\n  \n  axios.request(options).then(function (response) {\n    console.log(response.data);\n  }).catch(function (error) {\n    console.error(error);\n  });\n  // const handleFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   const weatherAPI = 'https://accuweatherstefan-skliarovv1.p.rapidapi.com/searchCity';\n  //   axios\n\n  //     .get(weatherAPI)\n     \n  //     .then((weatherRes) => {\n   \n  //       setShowResult(true);\n      \n  //       setWeatherData({\n  //         weather: weatherRes.data.weather,\n  //         main: weatherRes.data.main,\n  //         name: weatherRes.data.name,\n  //         sys: weatherRes.data.sys,\n  //       });\n        \n  //       setError(\"\");\n      \n  //     })\n  //     .catch((err) => setError(err));\n  // };\n  const handleTempTypeChange = (e) => {\n    setTempType(e.target.value);\n  };\n\n  return (\n    <aside id=\"left-side\">\n      <h3 className=\"aside-h3\">Find Current Weather Conditions</h3>\n      <h3 className=\"aside-h3\">Of Any City In The World</h3>\n      <input\n        onChange={handleSearch}\n        id=\"search\"\n        type=\"text\"\n        placeholder=\"Enter city...\"\n      />\n      {error && <div id=\"error\">There is no such city in the world</div>}\n      <FormSubmit\n        handleFormSubmit={handleFormSubmit}\n        tempType={tempType}\n        handleTempTypeChange={handleTempTypeChange}\n      />\n      {showResult && (\n        <ResultSection weatherData={weatherData} tempType={tempType} />\n      )}\n    </aside>\n  );\n}\n\nexport default AsideLeft;"]},"metadata":{},"sourceType":"module"}